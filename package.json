{
    "name": "c-cpp-compile-run",
    "displayName": "C/C++ Compile Run",
    "description": "Compile & Run single c/c++ files easly",
    "version": "0.3.0",
    "publisher": "danielpinto8zz6",
    "icon": "resources/logo.png",
    "engines": {
        "vscode": "^1.21.0"
    },
    "categories": [
        "Programming Languages",
        "Other"
    ],
    "keywords": [
        "c",
        "cpp",
        "compile",
        "run"
    ],
    "bugs": {
        "url": "https://github.com/danielpinto8zz6/c-cpp-compile-run/issues",
        "email": "danielpinto8zz6@gmail.com"
    },
    "homepage": "https://github.com/danielpinto8zz6/c-cpp-compile-run/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/danielpinto8zz6/c-cpp-compile-run.git"
    },
    "activationEvents": [
        "onCommand:extension.CompileRun",
        "onCommand:extension.Compile",
        "onCommand:extension.Run",
        "onCommand:extension.CompileWithFlags",
        "onCommand:extension.RunWithArguments"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.CompileRun",
                "title": "CompileRun : Compile & Run"
            },
            {
                "command": "extension.Compile",
                "title": "CompileRun : Compile"
            },
            {
                "command": "extension.Run",
                "title": "CompileRun : Run"
            },
            {
                "command": "extension.CompileWithFlags",
                "title": "CompileRun : Compile with flags"
            },
            {
                "command": "extension.RunWithArguments",
                "title": "CompileRun : Run with arguments"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "extension.CompileRun",
                    "when": "editorLangId ==  c"
                },
                {
                    "command": "extension.CompileRun",
                    "when": "editorLangId ==  cpp"
                },
                {
                    "command": "extension.Compile",
                    "when": "editorLangId ==  c"
                },
                {
                    "command": "extension.Compile",
                    "when": "editorLangId ==  cpp"
                },
                {
                    "command": "extension.Run",
                    "when": "editorLangId ==  c"
                },
                {
                    "command": "extension.Run",
                    "when": "editorLangId ==  cpp"
                },
                {
                    "command": "extension.CompileWithFlags",
                    "when": "editorLangId ==  c"
                },
                {
                    "command": "extension.CompileWithFlags",
                    "when": "editorLangId ==  cpp"
                },
                {
                    "command": "extension.RunWithArguments",
                    "when": "editorLangId ==  c"
                },
                {
                    "command": "extension.RunWithArguments",
                    "when": "editorLangId ==  cpp"
                },
                {
                    "command": "extension.CompileRun",
                    "when": "editorLangId ==  cc"
                },
                {
                    "command": "extension.Compile",
                    "when": "editorLangId ==  cc"
                },
                {
                    "command": "extension.Run",
                    "when": "editorLangId ==  cc"
                },
                {
                    "command": "extension.CompileWithFlags",
                    "when": "editorLangId ==  cc"
                },
                {
                    "command": "extension.RunWithArguments",
                    "when": "editorLangId ==  cc"
                }
            ]
        },
        "keybindings": [
            {
                "mac": "cmd+r",
                "win": "f6",
                "linux": "f6",
                "key": "f6",
                "command": "extension.CompileRun"
            }
        ],
        "configuration": {
            "title": "Compile Run configuration",
            "properties": {
                "c-cpp-compile-run.c-compiler-path": {
                    "type": "string",
                    "default": "gcc",
                    "description": "Set your c compiler path if it is not working",
                    "scope": "resource"
                },
                "c-cpp-compile-run.cpp-compiler-path": {
                    "type": "string",
                    "default": "g++",
                    "description": "Set your cpp compiler path if it is not working",
                    "scope": "resource"
                },
                "c-cpp-compile-run.save-before-compile": {
                    "type": "boolean",
                    "default": true,
                    "description": "Saves the file before compilation",
                    "scope": "resource"
                },
                "c-cpp-compile-run.c-compiler-flags": {
                    "type": "string",
                    "description": "Flags: e.g. -Wall. default: -Wall -Wextra",
                    "default": "-Wall -Wextra",
                    "scope": "resource"
                },
                "c-cpp-compile-run.cpp-compiler-flags": {
                    "type": "string",
                    "description": "Flags: e.g. -Wall. default: -Wall -Wextra",
                    "default": "-Wall -Wextra",
                    "scope": "resource"
                },
                "c-cpp-compile-run.run-args": {
                    "type": "string",
                    "description": "Run arguments",
                    "scope": "resource"
                },
                "c-cpp-compile-run.run-new-window": {
                    "type": "boolean",
                    "default": false,
                    "description": "Run in a new external terminal but not in the integrated terminal.",
                    "scope": "resource"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/mocha": "^5.2.5",
        "@types/node": "^10.11.7",
        "tslint": "^5.11.0",
        "typescript": "^3.1.3",
        "vscode": "^1.1.21"
    },
    "dependencies": {
        "command-exists": "^1.2.8",
        "path": "^0.12.7"
    }
}